OpenSFTP is licensed under GNU Lesser General Public License Version 3.
You can obtain a copy of the License at
http://www.gnu.org/licenses/lgpl.html


                                 OpenSFTP
                                Version 0.3
                               Release Notes

Introduction:
=============

This document contains the release notes for OpenSFTP v0.3, 
and highlights changes since the previous version.

For the very latest news, releases, manuals, hints, FAQs etc., 
please refer to the OpenSFTP homepage:
http://code.google.com/p/opensftp/

Ease Your Work with SFTP by Using OpenSFTP:
===========================================
OpenSFTP provides a FREE and HANDY set of utilities in pure Java designed to 
ease your work with SFTP. 

OpenSFTP consists of three low-coupling parts:
  * OpenSftp-api. A well designed set of API.
  * OpenSftp-impl. A reference implementation.
  * Pluggable, configurable and customizable modules, which are now represented
    in the forms of interceptors and listeners.

It's platform-independent, programmer-friendly, customizable, configurable and 
configuration-free. 
It's easy to use, easy to extend and easy to troubleshot.

You can use OpenSFTP as a LIGHTWEIGHT SFTP client, 
Or develop your own SFTP client, such as a desktop version, an RIA version or
a customized version for a certain enterprise application, based on OpenSFTP.

OpenSFTP is licensed under LGPLv3.

Features:
=========
The following is a list of features of OpenSFTP:

  * OpenSFTP is in pure Java, so it's platform-independent. It's known to work
    with JDK 1.5.0 or later. 
  * SSH2 protocol supported. 
      * Userauth: password, publickey (DSA, RSA) 
      * Host key type: ssh-dsa, ssh-rsa 
      * passphrase: empty or not 
      * Key exchange: diffie-hellman-group-exchange-sha1, 
        diffie-hellman-group1-sha1 
      * Cipher: blowfish-cbc,3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,
        aes128-ctr,aes192-ctr,aes256-ctr,3des-ctr,arcfour,arcfour128,arcfour256 
      * MAC: hmac-md5, hmac-sha1, hmac-md5-96, hmac-sha1-96 
  * Most SFTP commands have been implemented. The leftover will be added in the
    short future. 
  * Easy to use. You can seamlessly use it in your Java project without 
    worrying about the output capturing and exception handling. OpenSFTP 
    manages them well for you. 
  * Easy to extend. This feature contains two levels. 
      * You're free to construct your own implementation of OpenSFTP.
      * You're free to create various modules for OpenSFTP.
      * It's very easy to make your application which build on OpenSFTP use 
        another concrete implementation of OpenSFTP instead without interfering
        the application itself.
      * It's very easy to plug in or remove the out-of-box modules or modules 
        created by yourself or provided by 3rd parties without interfering your
        application.
  * Easy to troubleshot. OpenSFTP using log4j to record its running status 
    including output capturing and exception handling. It's easy to change the 
    logging level, change the logging pattern and even customize your own 
    appender. 

Changes Since Version 0.1:
==========================
  * Feature - [#1] Added multi-threading abilities to ProgressListener.
  * Change	- Added net.sf.opensftp.AbstractProgressListener 
  			  An easy approach to work with ProgressListener
  * Change	- Deleted net.sf.opensftp.impl.AbstractProgressListener
  			  replaced it with net.sf.opensftp.impl.BaseProgressListener
  * Change	- Added net.sf.opensftp.impl.BaseProgressListener
     		 
Changes Since Version 0.2:
==========================
  * Feature - [#3] Default progressListener for net.sf.opensftp.impl.SftpUtil
  * Feature - Default prompter for net.sf.opensftp.impl.SftpUtil
  * Change	- Added two methods to net.sf.opensftp.impl.SftpUtil:
  			  getPrompter(), getProgressListener()
  * Change	- Renamed net.sf.opensftp.impl.SwingPrompter to net.sf.opensftp.prompter.SwingPrompter
  * Fix		- a code issue of nestCounter in net.sf.opensftp.interceptor.LoggingInterceptor
  * Change	- Refinded the javadoc
